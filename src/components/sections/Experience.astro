---
import Section from "../Section.astro"

import { work } from "@cv"
import '../../styles/globals.css'
---

<Section title="Work Experience">
  <ul>
    {
      work.map(
        ({ name, startDate, endDate, position, summary, highlights, skills, url } , index) => {
            const startYear = new Date(startDate).getFullYear()
            const startMonth = new Date(startDate).toLocaleString('en-US', { month: 'short' })
            let endYear = endDate != null ? new Date(endDate).getFullYear() : "";
            let endMonth = endDate != null ? new Date(endDate).toLocaleString('en-US', { month: 'short' }) : "Present"; 
            const years = `${startMonth} ${startYear} - ${endMonth} ${endYear}`
            const highlightsId: string = `highlights-${index}`;

            return (
                <li>
                <article>
                    <header>
                    <div>
                        <h3>
                        <a href={url} title={`See ${name}`} target="_blank">
                            {name}
                        </a>
                        </h3>
                        <h4>{position}</h4>
                    </div>

                    <time>{years}</time> <!-- years variable now includes months -->
                    </header>

                    <footer>
                        <p>{summary}</p>
                        {(highlights.length > 0 && highlights[0] !== "") && (
                            <button data-target={highlightsId}>▶</button>
                        )}
                        <div id={highlightsId} style="display: none;">
                            <ul>
                            {highlights.map((highlight) => (
                                <li>{highlight}</li>
                            ))}
                            </ul>
                        </div>
                        <ul>
                            {
                            skills?.map((skill) => (
                                <li >{skill}</li> <!-- Astro manages keys under the hood, so no need to add key -->
                            ))
                            }
                        </ul>
                    </footer>
                </article>
                </li>
            )
            }
      )
    }
  </ul>
</Section>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        document.querySelectorAll('button[data-target]').forEach(button => {
            button.addEventListener('click', () => {
            const targetId = button.getAttribute('data-target');
            const targetElement = document.getElementById(targetId as string);
            if (targetElement) {
                const isVisible = targetElement.style.display === 'block';
                targetElement.style.display = isVisible ? 'none' : 'block';
                button.textContent = isVisible ? '▶' : '▼';
            }
            });
        });
    });
</script>

<style>
  ul {
    display: flex;
    flex-direction: column;
    gap: 32px;
  }

  article h3 {
    font-weight: 500;
  }

  article h4 {
    font-weight: 400 !important;
    
  }

  article a {
    color: var(--main-1);
  }

  article a:hover {
    text-decoration: underline;
    color: var(--contrast-1);
  }

  article h4 {
    font-weight: 400;
  }

  header {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    margin-bottom: 4px;
  }

  time {
    color: var(--main-2);
    font-size: 0.85rem;
    min-width: 102px;
    padding-top: .6rem;
  }

  footer ul {
        list-style: none; 
        flex-direction: row;
        padding: 0; 
        display: flex; 
        flex-wrap: wrap; 
        gap: 10px; 
    }

    footer ul li {
        background-color: var(--main-4); 
        color: var(--main-1);
        padding: 5px 10px; 
        border-radius: 5px; 
        font-size: 0.7rem; 
        font-weight: 500; 
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); 
        white-space: nowrap; 
    }

    footer p {
        margin-top: 8px; 
        font-size: 0.8rem; 
        color: var(--main-2); 
    }

    button[data-target] {
        background-color: var(--base-2); 
        color: var(--main-2); 
        border: 2px solid var(--main-2); 
        border-radius: 5px; 
        padding: 3px 6px; 
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); 
        cursor: pointer; 
        transition: all 0.3s ease; 
        font-size: 9px; 
        display: inline-flex; 
        align-items: center;
        justify-content: center;
        margin-top: 3px;
        margin-bottom: 8px;
        
    }

    button[data-target]:hover {
        background-color: var(--base-1); 
        border-color: var(--main-3); 
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2); 
    }

    button[data-target]:focus {
        outline: none;
        color: var(--main-1);  
        box-shadow: 0 0 0 3px rgba(91, 91, 91, 0.1); 
    }

    div[id^="highlights-"] {
        background-color: var(--base-1); 
        padding: 8px; 
        border-radius: 5px; 
        border: 1px solid var(--main-1); 
        margin-bottom: 10px; 
        max-width: 100%;
    }

  div[id^="highlights-"] ul {
    list-style-type: disc; 
    padding-left: 20px; 
    flex-direction: column;
    margin: 0.2rem;
  }

  div[id^="highlights-"] li {
    margin-bottom: 0px !important;
    font-size: 0.7rem !important;
    padding: 0 0 !important; 
    box-shadow: none !important; 
    background-color: var(--base-1) !important;
    white-space: normal !important;
    color: var(--main-2) !important;
  }

  div[id^="highlights-"] li:last-child {
    margin-bottom: 0;
  }

  @media (width <= 700px) {
    time {
      text-align: right;
      font-size: small;
      max-width: 40vw;
      padding-top: .3rem;
    }

    article h3 {
        font-weight: 500;
        font-size: large;
        color: #111;
    }
  }
</style>